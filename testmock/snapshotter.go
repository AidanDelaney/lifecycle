// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpacks/lifecycle (interfaces: MockSnapshotter)

// Package testmock is a generated GoMock package.
package testmock

import (
	gomock "github.com/golang/mock/gomock"
	"reflect"
)

// MockBuildEnv is a mock of BuildEnv interface
type MockSnapshotter struct {
	ctrl     *gomock.Controller
	recorder *MockSnapshotterMockRecorder
}

// MockBuildEnvMockRecorder is the mock recorder for MockBuildEnv
type MockSnapshotterMockRecorder struct {
	mock *MockSnapshotter
}

// NewMockBuildEnv creates a new mock instance
func NewMockSnapshotter(ctrl *gomock.Controller) *MockSnapshotter {
	mock := &MockSnapshotter{ctrl: ctrl}
	mock.recorder = &MockSnapshotterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSnapshotter) EXPECT() *MockSnapshotterMockRecorder {
	return m.recorder
}

// AddRootDir mocks base method
func (m *MockSnapshotter) TakeSnapshot(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TakeSnapshot", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddRootDir indicates an expected call of AddRootDir
func (mr *MockSnapshotterMockRecorder) TakeSnapshot(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TakeSnapshot", reflect.TypeOf((*MockSnapshotter)(nil).TakeSnapshot), arg0)
}
