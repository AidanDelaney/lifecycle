// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpack/lifecycle (interfaces: Env)

// Package mocks is a generated GoMock package.
package testmock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockEnv is a mock of Env interface
type MockEnv struct {
	ctrl     *gomock.Controller
	recorder *MockEnvMockRecorder
}

// MockEnvMockRecorder is the mock recorder for MockEnv
type MockEnvMockRecorder struct {
	mock *MockEnv
}

// NewMockEnv creates a new mock instance
func NewMockEnv(ctrl *gomock.Controller) *MockEnv {
	mock := &MockEnv{ctrl: ctrl}
	mock.recorder = &MockEnvMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEnv) EXPECT() *MockEnvMockRecorder {
	return m.recorder
}

// AddEnvDir mocks base method
func (m *MockEnv) AddEnvDir(arg0 string) error {
	ret := m.ctrl.Call(m, "AddEnvDir", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddEnvDir indicates an expected call of AddEnvDir
func (mr *MockEnvMockRecorder) AddEnvDir(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEnvDir", reflect.TypeOf((*MockEnv)(nil).AddEnvDir), arg0)
}

// AddRootDir mocks base method
func (m *MockEnv) AddRootDir(arg0 string) error {
	ret := m.ctrl.Call(m, "AddRootDir", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddRootDir indicates an expected call of AddRootDir
func (mr *MockEnvMockRecorder) AddRootDir(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRootDir", reflect.TypeOf((*MockEnv)(nil).AddRootDir), arg0)
}

// List mocks base method
func (m *MockEnv) List() []string {
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].([]string)
	return ret0
}

// List indicates an expected call of List
func (mr *MockEnvMockRecorder) List() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockEnv)(nil).List))
}

// SetEnvDir mocks base method
func (m *MockEnv) SetEnvDir(arg0 string) error {
	ret := m.ctrl.Call(m, "SetEnvDir", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetEnvDir indicates an expected call of SetEnvDir
func (mr *MockEnvMockRecorder) SetEnvDir(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetEnvDir", reflect.TypeOf((*MockEnv)(nil).SetEnvDir), arg0)
}
