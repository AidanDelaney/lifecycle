// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpacks/lifecycle (interfaces: MetadataRetriever)

// Package testmock is a generated GoMock package.
package testmock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	lifecycle "github.com/buildpacks/lifecycle"
	platform "github.com/buildpacks/lifecycle/platform"
)

// MockMetadataRetriever is a mock of MetadataRetriever interface.
type MockMetadataRetriever struct {
	ctrl     *gomock.Controller
	recorder *MockMetadataRetrieverMockRecorder
}

// MockMetadataRetrieverMockRecorder is the mock recorder for MockMetadataRetriever.
type MockMetadataRetrieverMockRecorder struct {
	mock *MockMetadataRetriever
}

// NewMockMetadataRetriever creates a new mock instance.
func NewMockMetadataRetriever(ctrl *gomock.Controller) *MockMetadataRetriever {
	mock := &MockMetadataRetriever{ctrl: ctrl}
	mock.recorder = &MockMetadataRetrieverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetadataRetriever) EXPECT() *MockMetadataRetrieverMockRecorder {
	return m.recorder
}

// RetrieveFrom mocks base method.
func (m *MockMetadataRetriever) RetrieveFrom(arg0 lifecycle.Cache) (platform.CacheMetadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveFrom", arg0)
	ret0, _ := ret[0].(platform.CacheMetadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveFrom indicates an expected call of RetrieveFrom.
func (mr *MockMetadataRetrieverMockRecorder) RetrieveFrom(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveFrom", reflect.TypeOf((*MockMetadataRetriever)(nil).RetrieveFrom), arg0)
}
