// +build linux darwin

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpacks/lifecycle/snapshot (interfaces: IgnoreList)

// Package testmock is a generated GoMock package.
package testmock

import (
	reflect "reflect"

	util "github.com/GoogleContainerTools/kaniko/pkg/util"
	gomock "github.com/golang/mock/gomock"
)

// MockIgnoreList is a mock of IgnoreList interface
type MockIgnoreList struct {
	ctrl     *gomock.Controller
	recorder *MockIgnoreListMockRecorder
}

// MockIgnoreListMockRecorder is the mock recorder for MockIgnoreList
type MockIgnoreListMockRecorder struct {
	mock *MockIgnoreList
}

// NewMockIgnoreList creates a new mock instance
func NewMockIgnoreList(ctrl *gomock.Controller) *MockIgnoreList {
	mock := &MockIgnoreList{ctrl: ctrl}
	mock.recorder = &MockIgnoreListMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIgnoreList) EXPECT() *MockIgnoreListMockRecorder {
	return m.recorder
}

// CustomEntries mocks base method
func (m *MockIgnoreList) CustomEntries() []util.IgnoreListEntry {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CustomEntries")
	ret0, _ := ret[0].([]util.IgnoreListEntry)
	return ret0
}

// CustomEntries indicates an expected call of CustomEntries
func (mr *MockIgnoreListMockRecorder) CustomEntries() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CustomEntries", reflect.TypeOf((*MockIgnoreList)(nil).CustomEntries))
}

// Load mocks base method
func (m *MockIgnoreList) Load() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load")
	ret0, _ := ret[0].(error)
	return ret0
}

// Load indicates an expected call of Load
func (mr *MockIgnoreListMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockIgnoreList)(nil).Load))
}
