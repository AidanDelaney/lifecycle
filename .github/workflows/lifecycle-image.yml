name: lifecycle-image

on:
  release:
    types:
      - published

jobs:
  build-lifecycle-image-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up go
        uses: actions/setup-go@v2-beta
        with:
          go-version: '1.14'
      - name: Publish to Registry
        run: |
          LIFECYCLE_VERSION=`echo ${{ github.event.release.tag_name }} | cut -d "v" -f2`
          curl -o lifecycle.tgz -L https://github.com/buildpacks/lifecycle/releases/download/v${LIFECYCLE_VERSION}/lifecycle-v${LIFECYCLE_VERSION}+linux.x86-64.tgz
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          go run ./tools/image/main.go -lifecyclePath ./lifecycle.tgz -tag buildpacksio/lifecycle:${LIFECYCLE_VERSION}-linux -tag buildpacksio/lifecycle:latest-linux
  build-lifecycle-image-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up go
        uses: actions/setup-go@v2-beta
        with:
          go-version: '1.14'
      - name: Publish to Registry
        run: |
          $LIFECYCLE_VERSION=$(echo ${{ github.event.release.tag_name }} | cut -d "v" -f2)
          curl -o lifecycle.tgz -L https://github.com/buildpacks/lifecycle/releases/download/v${LIFECYCLE_VERSION}/lifecycle-v${LIFECYCLE_VERSION}+windows.x86-64.tgz
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          go run ./tools/image/main.go -lifecyclePath ./lifecycle.tgz -tag buildpacksio/lifecycle:${LIFECYCLE_VERSION}-windows -tag buildpacksio/lifecycle:latest-windows
  create-lifecycle-image-manifest-list:
    needs: [build-lifecycle-image-linux, build-lifecycle-image-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Manifest List
        run: |
          LIFECYCLE_VERSION=`echo ${{ github.event.release.tag_name }} | cut -d "v" -f2`
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          DOCKER_CLI_EXPERIMENTAL=enabled docker manifest create buildpacksio/lifecycle:${LIFECYCLE_VERSION} buildpacksio/lifecycle:${LIFECYCLE_VERSION}-linux buildpacksio/lifecycle:${LIFECYCLE_VERSION}-windows
          DOCKER_CLI_EXPERIMENTAL=enabled docker manifest push buildpacksio/lifecycle:${LIFECYCLE_VERSION}
          DOCKER_CLI_EXPERIMENTAL=enabled docker manifest create buildpacksio/lifecycle:latest buildpacksio/lifecycle:latest-linux buildpacksio/lifecycle:latest-windows
          DOCKER_CLI_EXPERIMENTAL=enabled docker manifest push buildpacksio/lifecycle:latest
