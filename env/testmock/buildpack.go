// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/buildpacks/lifecycle/env (interfaces: Buildpack)

// Package testmock is a generated GoMock package.
package testmock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBuildpack is a mock of Buildpack interface.
type MockBuildpack struct {
	ctrl     *gomock.Controller
	recorder *MockBuildpackMockRecorder
}

// MockBuildpackMockRecorder is the mock recorder for MockBuildpack.
type MockBuildpackMockRecorder struct {
	mock *MockBuildpack
}

// NewMockBuildpack creates a new mock instance.
func NewMockBuildpack(ctrl *gomock.Controller) *MockBuildpack {
	mock := &MockBuildpack{ctrl: ctrl}
	mock.recorder = &MockBuildpackMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBuildpack) EXPECT() *MockBuildpackMockRecorder {
	return m.recorder
}

// SupportsAssetPackages mocks base method.
func (m *MockBuildpack) SupportsAssetPackages() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SupportsAssetPackages")
	ret0, _ := ret[0].(bool)
	return ret0
}

// SupportsAssetPackages indicates an expected call of SupportsAssetPackages.
func (mr *MockBuildpackMockRecorder) SupportsAssetPackages() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SupportsAssetPackages", reflect.TypeOf((*MockBuildpack)(nil).SupportsAssetPackages))
}
